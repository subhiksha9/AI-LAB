In [1]:
d={}
n=int(input("enter n:"))
for i in range(n):
  k=input("enter k:")
  d[k]=[x for x in input("enter elements:").split(" ")]
print(d)

enter n:6
enter k:1
enter elements:2 3
enter k:2
enter elements:
enter k:3
enter elements:4 5 6
enter k:4
enter elements:
enter k:5
enter elements:
enter k:6
enter elements:
{'1': ['2', '3'], '2': [''], '3': ['4', '5', '6'], '4': [''], '5': [''], '6': ['']}
In [12]:
def bfs(d,snode,v,q,gnode):
    q.append(snode)
    count=0
    while q:
      r=q.pop()
      v.append(r)
      if r==gnode:
        break
      else:
        for i in d[r]:
          if i not in v and i not in q:
            if i==gnode:
              v.append(i)
              count=count+1
            else:
              q.append(i)
        if count==1:
           break
In [13]:
snode=input("enter start node:")
gnode=input("enter goal node:")
v=[]
q=[]
bfs(d,snode,v,q,gnode)

enter start node:1
enter goal node:6
In [14]:
if q==[]:
  print("goal state not reached")
else:
  for i in v:
    print(i,"->",end=" ")
  print("the goal state is reached")

1 -> 3 -> 6 -> the goal state is reached
